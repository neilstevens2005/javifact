apply plugin: 'java'


repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:18.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task generateSources {
    println "generating sources"
    java.nio.file.Path baseSegmentDefinitionDir = file("buildSrc/src/main/resources/definitions/segment").toPath()
    java.nio.file.Path baseMessageDefinitionDir = file("buildSrc/src/main/resources/definitions/message").toPath()
    java.nio.file.Path generatedSourceDir = file("${buildDir}/generated-src/java").toPath()
    org.javifact.buildsrc.generator.SourceGenerator baseSourceGenerator =
            new org.javifact.buildsrc.generator.SourceGenerator(baseSegmentDefinitionDir, baseMessageDefinitionDir, generatedSourceDir, null)
    baseSourceGenerator.generate()

    java.nio.file.Path d96aSegmentDefinitionDir = file("buildSrc/src/main/resources/definitions/d96a/segment").toPath()
    java.nio.file.Path d96aMessageDefinitionDir = file("buildSrc/src/main/resources/definitions/d96a/message").toPath()
    org.javifact.buildsrc.generator.SourceGenerator d96aSourceGenerator =
            new org.javifact.buildsrc.generator.SourceGenerator(d96aSegmentDefinitionDir, d96aMessageDefinitionDir, generatedSourceDir, "d96a")
    d96aSourceGenerator.generate()
}

sourceSets{
    generatedSrcDep{
        java.srcDir file('src/generatedSrcDep/java')
        compileClasspath = sourceSets.main.compileClasspath
    }
    generatedSrc{
        java.srcDir file("${buildDir}/generated-src/java")
        compileClasspath = sourceSets.generatedSrcDep.output
    }
    main{
        compileClasspath += sourceSets.generatedSrc.output
    }
}

compileJava {
    dependsOn('generateSources')
}